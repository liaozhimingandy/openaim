# ========================
# GitHub Actions: 自动构建并生成发布文件（压缩包）
# 触发条件：
#   1. main 分支有 push
# ========================

name: Automated Release

on:
  push:
    branches:
      - main       # 监听 main 分支的推送

jobs:
  release:
    runs-on: ubuntu-latest

    # 设置 GitHub Token 权限，允许向仓库写入（创建 Release）
    permissions:
      contents: write  # 必须（用于发布 Release）

    steps:
      # 拉取代码
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # 只拉取最新提交，加快速度

      # 设置 Node.js 环境
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'  # 使用 Node LTS（20.x）
          cache: npm             # 缓存 npm 依赖
          cache-dependency-path: package-lock.json

      # 安装依赖
      - name: Install dependencies
        run: npm ci

      # 构建项目
      - name: Build project
        run: |
          npm run build
          # 为 GitHub Pages SPA 路由处理复制 404 页面
          cp dist/index.html dist/404.html

      # 将 dist 目录打包成 zip 文件
      - name: Archive build files
        run: zip -r build.zip dist

      # 获取短 SHA 用于版本标识, 8位
      - name: Get short SHA
        id: vars
        run: echo "SHORT_SHA=$(echo ${GITHUB_SHA} | cut -c1-8)" >> $GITHUB_ENV

      # 创建 Release 并上传构建产物
      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.SHORT_SHA }}   # 使用当前推送的 tag
          name: "Automated Release ${{ env.SHORT_SHA }}"
          files: build.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}